[project]
name = "blas-testing"
version = "1.0.0"
description = "A pixi project for testing compilation and running blas with various backends"
channels = ["conda-forge"]
platforms = ["win-64", "linux-64"]

[environments]
mklenv = {features = ["mklenv"], no-default-feature = true }
oblasenv = {features = ["oblasenv"], no-default-feature = true }

[feature.mklenv.dependencies]
libblas = { version = "*", build = "*mkl" }
liblapack = { version = "*", build = "*mkl" }
mkl-devel = "*"
cmake = ">=3.20.0"
ninja = "*"

[feature.mklenv.target.linux-64.dependencies]
gcc = "*"
gfortran = "*"

[feature.mklenv.target.win-64.dependencies]
vs2022_win-64 = "*"
#ifx_win-64 = "*"
fortran-compiler = "*"

[feature.oblasenv.dependencies]
libblas = { version = "*", build = "*openblas" }
liblapack = { version = "*", build = "*openblas" }
openblas = "*"
cmake = ">=3.20.0"
ninja = "*"

[feature.oblasenv.target.linux-64.dependencies]
gcc = "*"
gfortran = "*"

[feature.oblasenv.target.win-64.dependencies]
vs2022_win-64 = "*"
fortran-compiler = "*"

# Common task definitions for the top-level project
[tasks]
run-all = { depends-on = [] }

# ===== MKL Environment ===== #
[feature.mklenv.tasks]
# Build tasks for MKL
configure-mkl = "cmake -S . -B build-mkl -G Ninja"
build-mkl = "cmake --build build-mkl"
clean-mkl = "cmake -E remove_directory build-mkl"

# Platform-independent run tasks (will depend on platform-specific implementations)
run-cpp-mkl = { depends-on = ["configure-mkl", "build-mkl"] }
run-fortran-mkl = { depends-on = ["configure-mkl", "build-mkl"] }
run-all-mkl = { depends-on = ["run-cpp-mkl", "run-fortran-mkl"] }

# Windows-specific MKL tasks
[feature.mklenv.target.win-64.tasks]
# Executables
run-cpp-mkl-exe = "build-mkl/bin/cpp_dgemm_example.exe"
run-fortran-mkl-exe = "build-mkl/bin/fortran_dgemm_example.exe"

# Override the platform-independent tasks
run-cpp-mkl = { depends-on = ["configure-mkl", "build-mkl", "run-cpp-mkl-exe"] }
run-fortran-mkl = { depends-on = ["configure-mkl", "build-mkl", "run-fortran-mkl-exe"] }

# Utilities
check-build-mkl = "dir build-mkl/bin"
show-env = "set | grep CONDA"

# Linux-specific MKL tasks
[feature.mklenv.target.linux-64.tasks]
# Executables
run-cpp-mkl-exe = "./build-mkl/bin/cpp_dgemm_example"
run-fortran-mkl-exe = "./build-mkl/bin/fortran_dgemm_example"

# Override the platform-independent tasks
run-cpp-mkl = { depends-on = ["configure-mkl", "build-mkl", "run-cpp-mkl-exe"] }
run-fortran-mkl = { depends-on = ["configure-mkl", "build-mkl", "run-fortran-mkl-exe"] }

# Utilities
check-build-mkl = "ls -la ./build-mkl/bin"

# ===== OpenBLAS Environment ===== #
[feature.oblasenv.tasks]
# Build tasks for OpenBLAS
configure-openblas = "cmake -S . -B build-openblas -G Ninja"
build-openblas = "cmake --build build-openblas"
clean-openblas = "cmake -E remove_directory build-openblas"

# Platform-independent run tasks (will depend on platform-specific implementations)
run-cpp-openblas = { depends-on = ["configure-openblas", "build-openblas"] }
run-fortran-openblas = { depends-on = ["configure-openblas", "build-openblas"] }
run-all-openblas = { depends-on = ["run-cpp-openblas", "run-fortran-openblas"] }

# Windows-specific OpenBLAS tasks
[feature.oblasenv.target.win-64.tasks]
# Executables
run-cpp-openblas-exe = "build-openblas/bin/cpp_openblas_example.exe"
run-fortran-openblas-exe = "build-openblas/bin/fortran_dgemm_example.exe"

# Override the platform-independent tasks
run-cpp-openblas = { depends-on = ["configure-openblas", "build-openblas", "run-cpp-openblas-exe"] }
run-fortran-openblas = { depends-on = ["configure-openblas", "build-openblas", "run-fortran-openblas-exe"] }

# Utilities
check-build-openblas = "dir build-openblas/bin"

# Linux-specific OpenBLAS tasks
[feature.oblasenv.target.linux-64.tasks]
# Executables
run-cpp-openblas-exe = "./build-openblas/bin/cpp_openblas_example"
run-fortran-openblas-exe = "./build-openblas/bin/fortran_dgemm_example"

# Override the platform-independent tasks
run-cpp-openblas = { depends-on = ["configure-openblas", "build-openblas", "run-cpp-openblas-exe"] }
run-fortran-openblas = { depends-on = ["configure-openblas", "build-openblas", "run-fortran-openblas-exe"] }

# Utilities
check-build-openblas = "ls -la ./build-openblas/bin"

# ===== Universal run-all task ===== #
# Windows version will run both MKL and OpenBLAS examples
[target.win-64.tasks]
run-all = { cmd = "cmd /C \"pixi run -e mklenv run-all-mkl && pixi run -e oblasenv run-all-openblas\"" }

# Linux version will run both MKL and OpenBLAS examples
[target.linux-64.tasks]
run-all = { cmd = "bash -c 'pixi run -e mklenv run-all-mkl && pixi run -e oblasenv run-all-openblas'" }